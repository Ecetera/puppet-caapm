##############################################################################
#
# Introscope Silent Installation Response File
#
# Sample Response File
# CA Wily Introscope(R) Version 9.1 Release 9.1.4.0
# Copyright (c) 2012 CA. All Rights Reserved.
# Introscope(R) is a registered trademark of CA.
#
##############################################################################

##############################################################################
# How to install silently and use this file: 
#
# Introscope can be installed in silent mode (i.e. requiring no interaction 
# with a GUI or console). Introscope installations of version 8.x or higher 
# can be upgraded in silent mode. Silent installations and upgrades use the 
# settings specified in a response file. 
#
# Silent installations and upgrades can be performed as follows:
#
# Edit this file to reflect your preferred settings.
# Place this file in any directory. 
# If upgrading, ensure that your existing installation is fully backed up
# and all Introscope processes are shut down.
# Select the appropriate command format from the list below,
# and enter it at the command line to invoke the installer:
#
#   installer.exe -f <absolute path to response file>
#   installer.bin -f <absolute path to response file>
#   java -classpath installer.jar install -f <absolute path to response file>
#
# Note for upgrades only: 
# The upgrade procedure is not reversible. CA APM recommends creating a full 
# backup of your Introscope installation before initiating an upgrade.
# 
##############################################################################



#######################
# General Settings
#
# ================

# Specify the location of CA End User License Agreement (EULA)
# file. This agreement must be acknowledged and accepted 
# by the end user in order for installation to proceed. To acknowledge  
# and accept the agreement:
#   - open it in a text editor and read the terms and conditions 
#   - edit the end of the file to indicate acceptance of the license 
#   - save the changes
#   - specify the agreement's location using the property below
# The CA EULA location may be specified with an absolute or relative path.
# Relative paths will be resolved relative to the installer launch directory.
# On Windows, backslashes must be escaped.
#    Example Windows value: C:\\Documents and Settings\\ca-eula.txt
#    Example Unix value:    /home/myuser/ca-eula.txt
ca-eulaFile=<%= scope.lookupvar("caapm::em::eula_file") %>
  
# Directory where Introscope is to be installed.
# The directory path must be absolute, not relative.
# On all platforms, the path must end with a file separator.
# On Windows, backslashes must be escaped.
# Example Windows install directory: C:\\IntroscopeSilentInstall\\
# Example Unix install directory: /IntroscopeSilentInstall/
# Left blank, this property will default to one of the following values: 
# On Windows...
#    C:\\Program Files\\CA APM\\Introscope9.1.4.0\\ 
#        (Exact name and drive letter of program files directory may vary 
#        depending on OS configuration) 
# On Unix...
#    /root/Introscope9.1.4.0/
#        (Under the logged-in-end-user's home directory. Exact directory may vary 
#        depending on user account.)
USER_INSTALL_DIR=<%= scope.lookupvar("caapm::em::user_install_dir") %>


# Introscope features to install. Must be a comma-delimited list.
# Example: Enterprise Manager,WebView,ProbeBuilder
# The APM database stores Business Services and Application Dependency Map information.
# This database is deployed on a PostgreSQL database.
# If you want to install APM database only, use,
# silentInstallChosenFeatures=Database
# To install database along with EM add "Database" to the property below
# Ensure that you also specify databaseDir, dbAdminUser and dbAdminPassword properties
# below if you want to install APM database.
silentInstallChosenFeatures=<%= scope.lookupvar("caapm::em::features") %>

# If the above chosen features list includes Enterprise Manager or WebView,  
# specify the location of the external component library package (zip or tar).
# The external component library package can be downloaded from: 
# http://opensrcd.ca.com/ips/osgi
# The package is required in order for these features to run. 
# If no package is specified, installation cannot be performed.
# The package location may be specified with an absolute or relative path.
# Relative paths will be resolved relative to the installer launch directory.
# On Windows, backslashes must be escaped.
#    Example Windows value: C:\\osgiPackages.v<x.y>.windows.zip
#    Example Unix value:    /osgiPackages.v<x.y>.unix.tar
#            where <x.y> should be a valid version string.
externalComponentPackage=<%= scope.lookupvar("caapm::osgi::pkg_name") %>
  
# If the above chosen features list includes Enterprise Manager or WebView,  
# specify the location of the external component library's End User  
# License Agreement (EULA). This agreement must be acknowledged and accepted 
# by the end user in order for installation to proceed. To acknowledge  
# and accept the agreement:
#   - open it in a text editor and read the terms and conditions 
#   - edit the end of the file to indicate acceptance of the license 
#   - save the changes
#   - specify the agreement's location using the property below
# The EULA location may be specified with an absolute or relative path.
# Relative paths will be resolved relative to the installer launch directory.
# On Windows, backslashes must be escaped.
#    Example Windows value: C:\\Documents and Settings\\eula.txt
#    Example Unix value:    /home/myuser/eula.txt
eulaFile=<%= scope.lookupvar("caapm::osgi::eula_file") %>
  


########################
# Upgrade Settings
#
# ================

# To perform a silent upgrade of an existing Introscope 8.x or later installation,
# configure this responsefile as follows:
#   1) Set the upgrade property in this section to true. 
#   2) Set the USER_INSTALL_DIR property, in the above section, such that it
#      points to a valid Introscope 8.x or 9.x directory, using valid syntax. 
#   3) Set the externalComponentPackage and eulaFile properties, in the above 
#      section, such that they point to a valid component package and license
#      agreement, using valid syntax. The installer will recognize the license 
#      agreement as valid only if you have edited it to indicate acceptance 
#      of the agreement.
#   4) Optionally, to rename the Introscope install directory during an upgrade,
#      uncomment the install dir property in this section and set it
#      to the new value.
#   5) Optionally, to change Windows service names and service display names 
#      during an upgrade, go to the "Windows Service Settings" sections 
#      of this file and:
#        a) set the switches to true
#        b) set the service and display names to their new values
# The upgrade procedure is not reversible. CA APM recommends creating a full 
# backup of your Introscope installation before initiating an upgrade.
shouldUpgrade=<%= scope.lookupvar("caapm::em::upgradeEM") %>

# To rename the Introscope install directory during an upgrade,
# uncomment this property and specify a new name and location 
# for the upgraded directory.
# Use the same syntax as for the USER_INSTALL_DIR property:
# append a trailing slash; escape backslashes on Windows.
#      Example Windows value: C:\\IntroscopeSilentlyUpgradedInstall\\
#      Example Unix value: /IntroscopeSilentlyUpgradedInstall/
<% if scope.lookupvar("caapm::em::upgradeEM") != true %>
#upgradedInstallDir=
<% else %> 
upgradedInstallDir=<%= scope.lookupvar("caapm::em::$install_dir") %>
<% end %>



##########################################
# Enterprise Manager Install Settings
#
# ===================================

# Absolute path to license file. If you do not specify a license file, 
# or if the specified file is not valid, the Introscope Enterprise 
# Manager will be installed, but will not run.
# On Windows, backslashes must be escaped.
wilyLicenseFile=<%= scope.lookupvar("caapm::em::lic_file") %>



# Port used by Enterprise Manager to listen for incoming connections.
emPort=<%= scope.lookupvar("caapm::em::default_port") %>

# Port used by Enterprise Manager to serve web applications.
emWebPort=<%= scope.lookupvar("caapm::em::web_port") %>



##########################################
# Enterprise Manager User Password Settings
#
# ================

# Password for Enterprise Manager Admin account 
# leave this entry blank to use default
emAdminPassword=<%= scope.lookupvar("caapm::em::admin_passwd") %>

# password for Enterprise Manager Guest account 
# leave this entry blank to use default
emGuestPassword=<%= scope.lookupvar("caapm::em::guest_passwd") %>


#############################################
# Enterprise Manager Clustering Settings
#---------------------------------------

# Set to true if this Enterprise Manager will participate in a cluster.
shouldClusterEm=<%= scope.lookupvar("caapm::em::clusterEM") %>

# If the above property is set to true, specify a clustering role
# for this Enterprise Manager. Valid values are "Collector", "Manager" or "CDV"
# (case sensitive, no quotes). 
emClusterRole=<%= scope.lookupvar("caapm::em::cluster_role") %>

# If this Enterprise Manager will act as a cluster manager, specify
# connection properties (host and port) for up to ten managed collectors.
# The host can consist of a hostname or an IP address.
# Example value for host: myManagedEm.mydomain.com
# Example value for port: 5001
emCollectorHost.1=
emCollectorPort.1=
emCollectorHost.2=
emCollectorPort.2=
emCollectorHost.3=
emCollectorPort.3=
emCollectorHost.4=
emCollectorPort.4=
emCollectorHost.5=
emCollectorPort.5=
emCollectorHost.6=
emCollectorPort.6=
emCollectorHost.7=
emCollectorPort.7=
emCollectorHost.8=
emCollectorPort.8=
emCollectorHost.9=
emCollectorPort.9=
emCollectorHost.10=
emCollectorPort.10=


#####################################################
# Enterprise Manager Transaction Storage Settings
#------------------------------------------------
#
# The Enterprise Manager automatically stores Transaction Traces to disk.
# Specify a fixed length of time (in days) to store trace data.
# To conserve disk space, choose a lower value. 
# To store more trace data, choose a higher value.
emTxTraceDataShelfLife=<%= scope.lookupvar("caapm::em::txnTraceDataShelfLife") %>

# Specify a directory for storing trace data. 
# Be sure to choose a directory with sufficient storage space. 
# CA APM recommends a minimum of 2 GB for test systems and 20 GB for production. 
# The directory path may be absolute, or relative to the Introscope home.
# On Windows, backslashes must be escaped. 
# Example [Windows]: traces\\mytraces
# Example [Unix]:    traces/mytraces
emTxTraceDir=<%= scope.lookupvar("caapm::em::txnTraceDir") %>

# If disk space is a concern, you can optionally specify a disk space cap 
# for trace data. 
emTxTraceDiskSpaceCap=<%= scope.lookupvar("caapm::em::txnTraceDiskSpaceCap") %>


###############################################
# Enterprise Manager Data Storage Settings
#-----------------------------------------
#
# SmartStor(TM) is a feature that records all Introscope data to disk,
# where it can be quickly viewed and analyzed without the need for a database.
# SmartStor is always enabled. 
# Specify the storage directory for SmartStor. 
# Be sure to choose a directory that contains sufficient disk space for your
# data. A typical minimum is 35 GB. See the Sizing Guide for more information 
# on estimating disk space requirements for your specific environment. 
# If collecting agent data on this Enterprise Manager, 
# SmartStor MUST be located on a separate dedicated disk or I/O subsystem.
# On Windows, backslashes must be escaped. 
# Example [Windows]: data\\mystorage
# Example [Unix]:    data/mystorage
emDataStoreDir=<%= scope.lookupvar("caapm::em::smartstor_dir") %>

###############################################
# Enterprise Manager Thread Dump Directory
#---------------------------------------------
#
# On Windows, backslashes must be escaped. 
# Example [Windows]: threaddumps\\mystorage
# Example [Unix]:    threaddumps/mystorage
emThreadDumpDir=<%= scope.lookupvar("caapm::em::threaddump_dir") %>

###############################################
# Select Monitoring Options 
#---------------------------------------------
# Files for monitoring specific environments are installed in the examples folder. 
# If you don’t select monitoring for any of these environments now, you can 
# manually enable monitoring later by copying files from the examples folder.
# Set the property to true or false.
#
#CA APM Integration for Application Delivery Analysis 
shouldEnableAPMIntegrationPackForADA=<%= scope.lookupvar("caapm::em::enable_ADA") %>

#CA APM for Oracle Databases
shouldEnableCAAPMForOracleDB=<%= scope.lookupvar("caapm::em::enable_OracleDB") %>

#CA APM for Microsoft SharePoint
shouldEnableCAAPMForSharePointPortal=<%= scope.lookupvar("caapm::em::enable_SharePointPortal") %>

#CA APM for Web Servers	
shouldEnableCAAPMForWebServers=<%= scope.lookupvar("caapm::em::enable_WebServers") %>

#CA APM for Oracle WebLogic Server
shouldEnableCAAPMForWebLogic=<%= scope.lookupvar("caapm::em::enable_WebLogic") %>

#CA APM for Oracle WebLogic Portal
shouldEnableCAAPMForWebLogicPortal=<%= scope.lookupvar("caapm::em::enable_WebLogicPortal") %>

#CA APM for IBM WebSphere Application Server for Distributed Environments
shouldEnableCAAPMForWebSphere=<%= scope.lookupvar("caapm::em::enable_WebSphere") %>

#CA APM for IBM WebSphere Portal
shouldEnableCAAPMForWebSpherePortal=<%= scope.lookupvar("caapm::em::enable_WebSpherePortal") %>

#CA APM for IBM WebSphere MQ and IBM WebSphere Message Broker
shouldEnableCAAPMForWebSphereMQandMB=<%= scope.lookupvar("caapm::em::enable_WebSphereMQandMB") %>

#CA APM for IBM WebSphere Application Server for z/OS	
shouldEnableCAAPMForWebSphereZOS=<%= scope.lookupvar("caapm::em::enable_WebSphereZOS") %>

#CA APM for IBM CICS Transaction Gateway
shouldEnableCAAPMForIBMCTG=<%= scope.lookupvar("caapm::em::enable_IBMCTG") %>

#CA APM for IBM z/OS	
shouldEnableCAAPMForIBMzOSExtension=<%= scope.lookupvar("caapm::em::enable_IBMzOSExtension") %>

#CA Cross-Enterprise Application Performance Management
shouldEnableSysview=<%= scope.lookupvar("caapm::em::enable_Sysview") %>

#CA APM for CA SiteMinder Web Access Manager 
shouldEnableCAAPMForSiteMinder=<%= scope.lookupvar("caapm::em::enable_SiteMinder") %>

#CA APM for CA SiteMinder SNMP Collector	
shouldEnableCAAPMForSiteMinderSNMP=<%= scope.lookupvar("caapm::em::enable_SiteMinderSNMP") %>

#SOA Monitoring Options
shouldEnableCAAPMForSOA=<%= scope.lookupvar("caapm::em::enable_SOA") %>

#CA APM for Oracle Service Bus
shouldEnableCAAPMForOSB=<%= scope.lookupvar("caapm::em::enable_OSB") %>

#CA APM for TIBCO BusinessWorks
shouldEnableCAAPMForTibcoBW=<%= scope.lookupvar("caapm::em::enable_TibcoBW") %>

#CA APM for TIBCO Enterprise Message Service
shouldEnableCAAPMForTibcoEMS=<%= scope.lookupvar("caapm::em::enable_TibcoEMS") %>

#CA APM for IBM WebSphere Process Server/Business Process Management
shouldEnableCAAPMForWPSandWESB=<%= scope.lookupvar("caapm::em::enable_WPSandWESB") %>

#CA APM for webMethods Broker	
shouldEnableCAAPMForWMBroker=<%= scope.lookupvar("caapm::em::enable_WMBroker") %>

#CA APM for webMethods Integration Server
shouldEnableCAAPMForWebMethodsIS=<%= scope.lookupvar("caapm::em::enable_WebMethodsIS") %>

#CA APM Integration with Cloud Monitor
shouldEnableAPMIntegrationPackForCM=<%= scope.lookupvar("caapm::em::enable_CloudMonitor") %>

#CA APM Integration for CA LISA
shouldEnableCAAPMIntegrationForCALISA=<%= scope.lookupvar("caapm::em::enable_CALISA") %>


#####################################################
# Enterprise Manager As Windows Service Settings
#----------------------------------------------- 

# Specify whether to configure the Enterprise Manager as a Windows 
# Service. This option is only available for Windows.
#
# During upgrade, the shouldConfigEmAsService property does NOT take
# effect. Only if previous installation has configured EM as service
# the Windows service name and service display name will be revised
# from the original values to the values specified in this section.
shouldConfigEmAsService=<%= scope.lookupvar("caapm::em::config_as_service") %>

# Enter a unique service name for the Service if one is desired.
# The service name is for use by the Windows registry.
# The service name must be 8 characters or less, with no spaces.
emAsServiceName=<%= scope.lookupvar("caapm::em::service_name") %>

# Enter a unique display name for the Service if one is desired.
# The display name is for use in Windows control panels, and with
# the NET START command. It may contain spaces.
emAsServiceDisplayName=<%= scope.lookupvar("caapm::em::service_display_name") %>


###############################################
# Enterprise Manager Advanced JVM Settings
#-----------------------------------------
#
# These options should only be configured by advanced users.
# If you are unsure of which values to enter, keep the defaults by
# leaving these properties commented out.

# Specify the path to the JVM that will be used to run the Enterprise 
# Manager. The path may be absolute, or relative to the Introscope home.
# On Windows, backslashes must be escaped.
# Example [Windows]: jre\\bin\\java.exe
# Example [Unix]:    jre/bin/java
<% if scope.lookupvar("caapm::em::emLaxNlCurrentVm") != '' %>
emLaxNlCurrentVm=<%= scope.lookupvar("caapm::em::emLaxNlCurrentVm") %>
<% else %> 
#emLaxNlCurrentVm=
<% end %>


# Specify any desired command line arguments to be used by the 
# Enterprise Manager JVM.
# The following switches are recommended for 32-bit Sun JVMs: 
# -showversion -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:CMSInitiatingOccupancyFraction=50 
# If you are using both Hot Failover and the CEM UI, 
# add this switch, -Dosgi.clean=false
#emLaxNlJavaOptionAdditional=-Xms512m -Xmx1024m -XX:MaxPermSize=256m -Dorg.owasp.esapi.resources=./config/esapi
<% if scope.lookupvar("caapm::em::emLaxNlJavaOptionAdditional") != '' %>
emLaxNlJavaOptionAdditional=<%= scope.lookupvar("caapm::em::emLaxNlJavaOptionAdditional") %>
<% else %> 
#emLaxNlJavaOptionAdditional=
<% end %>


#####################################################
# APM Database Settings
#--------------------------------------------

# The APM database can be on PostgreSQL or Oracle 10g/11g
# Set one of the propeties to true depending on whether you choose Postgres or Oracle
<% if scope.lookupvar("caapm::em::apm_db") != 'postgres' %>
chosenDatabaseIsPostgres=false
chosenDatabaseIsOracle=true
<% else %> 
chosenDatabaseIsPostgres=true
chosenDatabaseIsOracle=false
<% end %>

# PostgreSQL properties (set these if you are using PostgreSQL database)
# The APM database can be installed on Linux, Solaris and Windows platforms.
# Set the following set of properties when pointing to an existing APM database
# and when installing PostgreSQL database.

dbHost=<%= scope.lookupvar("caapm::em::db_host") %>
dbPort=<%= scope.lookupvar("caapm::em::db_port") %>
dbName=<%= scope.lookupvar("caapm::em::db_name") %>
dbUser=<%= scope.lookupvar("caapm::em::db_user_name") %>
dbPassword=<%= scope.lookupvar("caapm::em::db_user_passwd") %>

# Set the following set of properties when installing the database (in addition to properties above).
# database install dir for Windows. For Linux and Solaris set default to /opt/database
# If you are running CA APM, it is recommended that you put 
# the APM database on its own disk or partition.
<% if @operatingsystem == 'windows' %>
databaseDir=<%= scope.lookupvar("caapm::em::postgres_dir") %>
dbAdminUser=<%= scope.lookupvar("caapm::em::pg_admin_user") %>
dbAdminPassword=<%= scope.lookupvar("caapm::em::pg_admin_passwd") %>
<% else %> 
#databaseDir=database
#dbAdminUser=postgres
#dbAdminPassword=C@wilyapm90
<% end %>

# For PostgreSQL DB installation on Windows platform only
# Set the DB install script execution timeout wait time (in milliseconds)
dbInstallScriptTimeoutInMillis=<%= scope.lookupvar("caapm::em::pg_install_timeout") %>

# Set validateDatabase to true if you want to validate the existing APM database and
# create new schema.
#validateDatabase=true
<% if scope.lookupvar("caapm::em::validate_db") != 'true' %>
#validateDatabase=true
<% else %> 
validateDatabase=true
<% end %>

# set upgradeSchema to true if you want to upgrade schema from 4.5.0 or 5.0.0 to 9.0.5
# Schema can be upgraded only on Linux and Windows.
#upgradeSchema=true

# Oracle properties (set these if you are using Oracle database.)
# Set 'useExistingSchemaForOracle' property to true if the schema already exists 
# for EM to connect. Set this property to false (default) if you want to create new schema
# on a Oracle Database.
useExistingSchemaForOracle=false
oracleDbHost=<%= scope.lookupvar("caapm::em::db_host") %>
oracleDbPort=<%= scope.lookupvar("caapm::em::db_port") %>
oracleDbSidName=<%= scope.lookupvar("caapm::em::db_name") %>
oracleDbUsername=<%= scope.lookupvar("caapm::em::db_user_name") %>
oracleDbPassword=<%= scope.lookupvar("caapm::em::db_user_passwd") %>

####################################
# WebView Install Settings
#
# ========================

# Specify the port on which WebView will listen for HTTP connections. 
# Also specify the hostname and port of the Introscope Enterprise Manager 
# to which WebView will connect. 
wvPort=<%= scope.lookupvar("caapm::em::webview_port") %>
wvEmHost=<%= scope.lookupvar("caapm::em::webview_em_host") %>
wvEmPort=<%= scope.lookupvar("caapm::em::webview_em_port") %>


##########################################
# WebView As Windows Service Settings
#------------------------------------

# Specify whether to configure WebView as a Windows 
# Service. This option is only available for Windows.
#
# During upgrade, the shouldConfigWvAsService property does NOT take
# effect. Only if previous installation has configured WV as service
# the Windows service name and service display name will be revised
# from the original values to the values specified in this section.
shouldConfigWvAsService=<%= scope.lookupvar("caapm::em::config_wv_as_service") %>

# Enter a unique service name for the Service if one is desired.
# The service name is for use by the Windows registry.
# The service name must be 8 characters or less, with no spaces.
wvAsServiceName=<%= scope.lookupvar("caapm::em::wv_service_name") %>

# Enter a unique display name for the Service if one is desired.
# The display name is for use in Windows control panels, and with
# the NET START command. It may contain spaces.
wvAsServiceDisplayName=<%= scope.lookupvar("caapm::em::wv_service_display_name") %>


####################################
# WebView Advanced JVM Settings
#------------------------------
#
# These options should only be configured by advanced users.
# If you are unsure of which values to enter, keep the defaults by
# leaving these properties commented out.

# Specify the path to the JVM that will be used to run WebView. 
# The path may be absolute, or relative to the Introscope home.
# On Windows, backslashes must be escaped.
# Example [Windows]: jre\\bin\\java.exe
# Example [Unix]:    jre/bin/java
#wvLaxNlCurrentVm=
<% if scope.lookupvar("caapm::em::wv_current_vm") != '' %>
wvLaxNlCurrentVm=<%= scope.lookupvar("caapm::em::wv_current_vm") %>
<% else %> 
#wvLaxNlCurrentVm=
<% end %>

# Specify any desired command line arguments to be used by the 
# WebView JVM. The recommended setting for the headless switch is:
#  - false for Windows platforms
#  - true for other UNIX and mainframe platforms
#wvLaxNlJavaOptionAdditional=-Xms128m -Xmx512m -Djava.awt.headless=true -Dorg.owasp.esapi.resources=./config/esapi
<% if scope.lookupvar("caapm::em::wvLaxNlJavaOptionAdditional") != '' %>
wvLaxNlJavaOptionAdditional=<%= scope.lookupvar("caapm::em::wvLaxNlJavaOptionAdditional") %>
<% else %> 
#wvLaxNlJavaOptionAdditional=
<% end %>



####################################
# ProbeBuilder Install Settings
#
# =============================

#########################################
# ProbeBuilder Advanced JVM Settings
#-----------------------------------
#
# These options should only be configured by advanced users.
# If you are unsure of which values to enter, keep the defaults by
# leaving these properties commented out.

# Specify the path to the JVM that will be used to run the Workstation. 
# The path may be absolute, or relative to the Introscope home.
# On Windows, backslashes must be escaped.
# Example [Windows]: jre\\bin\\java.exe
# Example [Unix]:    jre/bin/java
#pbLaxNlCurrentVm=
<% if scope.lookupvar("caapm::em::pbLaxNlCurrentVm") != '' %>
pbLaxNlCurrentVm=<%= scope.lookupvar("caapm::em::pbLaxNlCurrentVm") %>
<% else %> 
#pbLaxNlCurrentVm=
<% end %>


# Specify any desired command line arguments to be used by the 
# ProbeBuilder JVM. 
#pbLaxNlJavaOptionAdditional=-Xms32m -Xmx64m
<% if scope.lookupvar("caapm::em::pbLaxNlJavaOptionAdditional") != '' %>
pbLaxNlJavaOptionAdditional=<%= scope.lookupvar("caapm::em::pbLaxNlJavaOptionAdditional") %>
<% else %> 
#pbLaxNlJavaOptionAdditional=
<% end %>



###############################
# InstallAnywhere Settings
# 
# ========================

# Installer UI mode. Do not edit.
INSTALLER_UI=silent
